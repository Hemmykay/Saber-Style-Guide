---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Input from "../components/inputs/Input.astro";
import Select from "../components/inputs/Select.astro";
import Textarea from "../components/inputs/Textarea.astro";
import DateInput from "../components/inputs/DateInput.astro";
import FileInput from "../components/inputs/FileInput.astro";
import { Check, Circle, Search } from "lucide-astro";

const handleDateChange = (event) => {
  console.log('Selected date:', event.target.value);
};

const handleFileChange = (event) => {
  const selectedFile = event.target.files[0];
  console.log('Selected file:', selectedFile);
};

const items = [
  { name: "Item 1", selected: true },
  { name: "Item 2", selected: false },
  { name: "Item 3", selected: false },
  { name: "Item 4", selected: false },
  { name: "Item 5", selected: false },
  { name: "Item 6", selected: false },
  {name: "Item 7", selected: false },
  {name: "Item 8", selected: false },
  {name: "Item 9", selected: false }
];
---
<Layout title="inputs-style-guide">
  <Header />
  <div class="m-3 border border-dotted border-neutral-300 rounded-md px-3 py-10">
    <div class="mb-8 flex gap-5 items-center w-full flex-wrap">
      <Input 
        type="text"
        placeholder="Placeholder"
      />

      <Select
        options={[
          { value: 'Select', label: 'Select' },
          { value: 'option1', label: 'Option 1' },
          { value: 'option2', label: 'Option 2' }
        ]}
        width="full"
      />

      <DateInput
        width="full"
        value=""
        onChange={handleDateChange} 
      />

      <FileInput
        width="full"
        onChange={handleFileChange} 
      />
    </div>

    <div class="mb-8 flex gap-5 items-center flex-wrap">
      <Input 
        type="text"
        placeholder="Placeholder"
        error={true}
      />

      <Select
        options={[
          { value: 'Select', label: 'Select' },
          { value: 'option1', label: 'Option 1' },
          { value: 'option2', label: 'Option 2' }
        ]}
        width="full"
        error={true}
      />
    </div>

    <div class="mb-8">
      <Textarea 
        placeholder="Placeholder"
      />
    </div>

    <div class="mb-8 flex gap-5 items-center flex-wrap">
      <Input
        label="Label"
        type="text"
        placeholder="Placeholder"
      />

      <Select
        label="Label"
        options={[
          { value: 'Select', label: 'Select' },
          { value: 'option1', label: 'Option 1' },
          { value: 'option2', label: 'Option 2' }
        ]}
        width="full"
      />

      <DateInput
        label="Label"
        width="full"
        value=""
        onChange={handleDateChange} 
      />

      <FileInput
        label="Label"
        width="full"
        onChange={handleFileChange} 
      />
    </div>

    <div class="mb-8 flex gap-5 items-center flex-wrap">
      <Input
        label="Label"
        type="text"
        placeholder="Placeholder"
        error={true}
        errorMessage="This is an error message"
      />

      <Select
        label="Label"
        options={[
          { value: 'Select', label: 'Select' },
          { value: 'option1', label: 'Option 1' },
          { value: 'option2', label: 'Option 2' }
        ]}
        width="full"
        error={true}
        errorMessage="This is an error message"
      />

      <DateInput
        label="Label"
        width="full"
        value=""
        onChange={handleDateChange} 
        error={true}
        errorMessage="This is an error message"
      />

      <FileInput
        label="Label"
        width="full"
        onChange={handleFileChange}
        error={true}
        errorMessage="This is an error message"
      />
    </div>

    <div>
      <Textarea 
        label="Label"
        placeholder="Placeholder"
      />
    </div>
  </div>
  <section class="py-3 px-20 text-neutral-300">
    <div class="w-[30rem] shadow-lg rounded-2xl bg-white border border-neutral-200 box-border max-w-full flex flex-col py-2 px-0 gap-2">
      
      <!-- Search Bar -->
      <div class="sticky top-0 z-10 bg-white p-2">
        <div class="flex flex-row items-center gap-2 border-b border-neutral-200 py-3 px-3 shadow-sm">
          <Circle class="h-6 w-6"/>
          <input
            class="flex-1 border-none outline-none text-base bg-transparent text-neutral-500"
            placeholder="Search"
            type="text"
          />
        </div>
      </div>
  
      <!-- Scrollable Items List with Custom Scrollbar -->
      <section class="flex flex-col gap-2 text-neutral-500 max-h-[15rem] overflow-y-auto custom-scrollbar">
        {items.map((item) => (
          <div class={`flex items-center justify-between p-3 rounded-lg transition-colors ${item.selected ? 'bg-blue-50' : 'bg-white'} hover:bg-blue-50`}>
            <span class="text-neutral-500 font-medium">
              {item.name} {item.selected ? "- Selected" : ""}
            </span>
            {item.selected && <Check class="h-6 w-6"/>}
          </div>
        ))}
      </section>
    </div>
  </section>
  
  
 

</Layout>

<style>
  /* WebKit (Chrome, Safari, Edge) custom scrollbar */
  .custom-scrollbar::-webkit-scrollbar {
    width: 8px;
  }
  .custom-scrollbar::-webkit-scrollbar-track {
    background: #f0f0f0;
    border-radius: 100px;
  }
  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: #9ca3af;
    border-radius: 100px;
    border: 2px solid #f0f0f0;
  }
  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: #6b7280;
  }

  /* Firefox custom scrollbar */
  .custom-scrollbar {
    scrollbar-width: 5px;
    scrollbar-color: #9ca3af #f0f0f0;
  }
</style>